plugins {
	id 'java'
	id 'org.springframework.boot' version '2.1.9.RELEASE'
	id 'gradle-boost' version '2.1.0'
	id 'maven-publish'
	id 'jacoco'
	id 'org.sonarqube' version '2.7'
}


group = 'com.ford.demogl'
version = gradleBoost.fn.gitVersion()
sourceCompatibility = '1.8'
println "Build Version = ${version ?: '[none]'}"
// tag::configurations[]
configurations {
	jaxb
}

apply plugin: 'io.spring.dependency-management'
dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR3'
        mavenBom 'io.pivotal.spring.cloud:spring-cloud-services-dependencies:2.1.1.RELEASE'
        mavenBom  org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}
// tag::wsdl[]
task genJaxb {
	ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
	ext.classesDir = "${buildDir}/classes/jaxb"
	//ext.schema = "http://localhost:8080/ws/countries.wsdl"
	ext.schema = "file:///C:/Users/RVODELA/GLPosting/demoglpostsoap/demogl-service-demoglpostsoap/src/main/resources/journalentrycreaterequestconfi_12.wsdl";

	outputs.dir classesDir

	doLast() {
		project.ant {
			taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
					classpath: configurations.jaxb.asPath
			mkdir(dir: sourcesDir)
			mkdir(dir: classesDir)

			xjc(destdir: sourcesDir, schema: schema,
					//package: "com.example.consumingwebservice.wsdl"
					package: "com.sap.xi.sapscore.sfin"
			)


					{
						arg(value: "-wsdl")
						produces(dir: sourcesDir, includes: "**/*.java")
					}

			javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
					debugLevel: "lines,vars,source",
					classpath: configurations.jaxb.asPath) {
				src(path: sourcesDir)
				include(name: "**/*.java")
				include(name: "*.java")
			}

			copy(todir: classesDir) {
				fileset(dir: sourcesDir, erroronmissingdir: false) {
					exclude(name: "**/*.java")
				}
			}
		}
	}
}

repositories {
	mavenCentral()
}
dependencies {
	implementation 'org.springframework.ws:spring-ws-core'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.ford.cloudnative:spring-boot-starter-ford:2.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'

	//security
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	jaxb "com.sun.xml.bind:jaxb-xjc:2.1.7"
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	//compile(files(genJaxb.classesDir).builtBy(genJaxb))
	//other
	implementation 'org.apache.httpcomponents:httpclient:4.5.4'
	compileOnly 'org.projectlombok:lombok:1.18.10'
	annotationProcessor 'org.projectlombok:lombok:1.18.10'
	compile group: 'org.springframework', name: 'spring-oxm', version: '5.2.1.RELEASE'

	/*********** TEST ***********/

	testImplementation 'com.ford.cloudnative:spring-base-test:2.0.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'


	compile('javax.activation:activation:1.1')
	compile('org.glassfish.jaxb:jaxb-core:2.3.0')
	compile('org.glassfish.jaxb:jaxb-runtime:2.3.2')
}



